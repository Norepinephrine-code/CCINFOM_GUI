/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package view;

import controller.REPORT_DiseaseTrendService;
import controller.REPORT_DoctorActivityService;
import controller.REPORT_LabProcedureService;
import controller.REPORT_PatientVisitService;
import java.util.List;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ACER
 */
public class RecordsView extends javax.swing.JPanel {

    /**
     * Creates new form RecordsView
     */
    public RecordsView() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        btngChoices = new javax.swing.ButtonGroup();
        lblSelectType = new javax.swing.JLabel();
        cbReportType = new javax.swing.JComboBox<>();
        btngHours = new javax.swing.JRadioButton();
        btngDays = new javax.swing.JRadioButton();
        btngYear = new javax.swing.JRadioButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        btnGenerateResult = new javax.swing.JButton();

        lblSelectType.setText("Select the type of Report: ");

        cbReportType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Disease Trends", "Doctor Activity", "Lab Procedure", "Patient Visits" }));
        cbReportType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbReportTypeActionPerformed(evt);
            }
        });

        btngChoices.add(btngHours);
        btngHours.setText("Past 24 Hours");
        btngHours.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btngHoursActionPerformed(evt);
            }
        });

        btngChoices.add(btngDays);
        btngDays.setText("Past 30 Days");
        btngDays.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btngDaysActionPerformed(evt);
            }
        });

        btngChoices.add(btngYear);
        btngYear.setText("Past year");
        btngYear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btngYearActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        btnGenerateResult.setText("Generate");
        btnGenerateResult.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGenerateResultActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblSelectType, javax.swing.GroupLayout.DEFAULT_SIZE, 148, Short.MAX_VALUE)
                    .addComponent(cbReportType, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btngYear)
                            .addComponent(btngDays)
                            .addComponent(btngHours))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(btnGenerateResult, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(26, 26, 26)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 354, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addComponent(lblSelectType)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbReportType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btngHours)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btngDays)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btngYear)
                        .addGap(18, 18, 18)
                        .addComponent(btnGenerateResult))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(30, Short.MAX_VALUE))
        );
    }// </editor-fold>                        

    private void cbReportTypeActionPerformed(java.awt.event.ActionEvent evt) {                                             
        
    }                                            

    private void btngHoursActionPerformed(java.awt.event.ActionEvent evt) {                                          
        cbReportTypeActionPerformed(evt);
    }                                         

    private void btngDaysActionPerformed(java.awt.event.ActionEvent evt) {                                         
        cbReportTypeActionPerformed(evt);
    }                                        

    private void btngYearActionPerformed(java.awt.event.ActionEvent evt) {                                         
        cbReportTypeActionPerformed(evt);
    }                                        

    private void btnGenerateResultActionPerformed(java.awt.event.ActionEvent evt) {                                                  
        String periodPattern = null;
    java.time.LocalDate now = java.time.LocalDate.now();

    if (btngHours.isSelected()) {
        periodPattern = now.format(java.time.format.DateTimeFormatter.ofPattern("yyyy-MM-dd"));
    } else if (btngDays.isSelected()) {
        periodPattern = now.format(java.time.format.DateTimeFormatter.ofPattern("yyyy-MM"));
    } else if (btngYear.isSelected()) {
        periodPattern = String.valueOf(now.getYear());
    }

    if (periodPattern == null) {
        return; // No radio button selected
    }

    String type = (String) cbReportType.getSelectedItem();
    javax.swing.table.DefaultTableModel model = null;

    if ("Disease Trends".equals(type)) {
        REPORT_DiseaseTrendService service = new REPORT_DiseaseTrendService(null);
        java.util.List<model.REPORT_DiseaseTrend> data = service.generateReport(periodPattern);
        model = new javax.swing.table.DefaultTableModel(new String[]{"Disease", "Frequency", "Period"}, 0);
        if (data != null) {
            for (model.REPORT_DiseaseTrend r : data) {
                model.addRow(new Object[]{r.getDiseaseName(), r.getFrequency(), r.getPeriod()});
            }
        }
    } else if ("Doctor Activity".equals(type)) {
        REPORT_DoctorActivityService service = new REPORT_DoctorActivityService(null);
        model.REPORT_DoctorActivity r = service.generateReport(1, periodPattern);
        model = new javax.swing.table.DefaultTableModel(new String[]{"Doctor", "Visits", "Diagnoses", "Lab Orders"}, 0);
        if (r != null) {
            model.addRow(new Object[]{r.getDoctorName(), r.getTotalVisits(), r.getTotalDiagnoses(), r.getTotalLabOrders()});
        }
    } else if ("Lab Procedure".equals(type)) {
        REPORT_LabProcedureService service = new REPORT_LabProcedureService(null);
        java.util.List<model.REPORT_LabProcedure> data = service.generateReport(periodPattern);
        model = new javax.swing.table.DefaultTableModel(new String[]{"Procedure ID", "Name", "Patient ID", "Patient Name", "Date"}, 0);
        if (data != null) {
            for (model.REPORT_LabProcedure r : data) {
                model.addRow(new Object[]{r.getProcedureId(), r.getProcedureName(), r.getPatientId(), r.getPatientName(), r.getProcedureDate()});
            }
        }
    } else if ("Patient Visits".equals(type)) {
        REPORT_PatientVisitService service = new REPORT_PatientVisitService(null);
        java.util.List<model.REPORT_PatientVisit> data = service.generateReport(periodPattern);
        model = new javax.swing.table.DefaultTableModel(new String[]{"Visit ID", "Patient ID", "Patient Name", "Visit Date"}, 0);
        if (data != null) {
            for (model.REPORT_PatientVisit r : data) {
                model.addRow(new Object[]{r.getVisitId(), r.getPatientId(), r.getPatientName(), r.getVisitDate()});
            }
        }
    }

    if (model != null) {
        jTable1.setModel(model);
    }
    }                                                 


    // Variables declaration - do not modify                     
    private javax.swing.JButton btnGenerateResult;
    private javax.swing.ButtonGroup btngChoices;
    private javax.swing.JRadioButton btngDays;
    private javax.swing.JRadioButton btngHours;
    private javax.swing.JRadioButton btngYear;
    private javax.swing.JComboBox<String> cbReportType;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel lblSelectType;
    // End of variables declaration                   
}
